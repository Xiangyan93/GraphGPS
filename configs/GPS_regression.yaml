metric_best: mae # auc, mae
metric_agg: argmin
wandb:
  use: False
  project: Custom
dataset:
  format: PyG-Custom
  task: graph
  task_type: regression # classification # 
  transductive: False
  node_encoder: True
  node_encoder_name: Atom #TypeDictNode+LapPE # (Atom or TypeDictNode)+LapPE;+RWSE;+EquivStableLapPE;+SignNet
#  node_encoder_num_types: 28 # required only for TypeDictNode
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: Bond # TypeDictEdge # (Bond or TypeDictEdge)
#  edge_encoder_num_types: 4 # required only for TypeDictEdge
  edge_encoder_bn: False
posenc_RWSE:
  enable: True
  kernel:
    times_func: range(1,17)
  model: Linear
  dim_pe: 20
  raw_norm_type: BatchNorm
posenc_LapPE:
  enable: True
  eigen:
    laplacian_norm: none
    eigvec_norm: L2
    max_freqs: 8
  model: DeepSet
  dim_pe: 8
  layers: 2
  raw_norm_type: none
train:
  mode: custom
  batch_size: 32
  eval_period: 1
  ckpt_period: 100
model:
  type: GPSModel
  loss_fun: mse #cross_entropy # 
  # edge_decoding: dot
  graph_pooling: mean # add;mean;max;graph_token.
gt:
  layer_type: GINE+Transformer  # CustomGatedGCN+Transformer;GCN+Transformer
  layers: 10
  n_heads: 4
  dim_hidden: 64  # `gt.dim_hidden` must match `gnn.dim_inner`
  dropout: 0.0
  attn_dropout: 0.5
  layer_norm: False
  batch_norm: True
gnn:
  head: san_graph
  layers_pre_mp: 0
  layers_post_mp: 3  # Not used when `gnn.head: san_graph`
  dim_inner: 64  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: True
  act: relu
  dropout: 0.0
#  agg: mean
#  normalize_adj: False
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 0.0
  base_lr: 0.0005
  max_epoch: 500
  scheduler: cosine_with_warmup
  num_warmup_epochs: 5
